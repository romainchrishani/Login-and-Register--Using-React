[{"C:\\Users\\Romain Perera\\Documents\\University\\B19L2\\B19L2S2\\Industry Based Project\\Login and register\\src\\index.js":"1","C:\\Users\\Romain Perera\\Documents\\University\\B19L2\\B19L2S2\\Industry Based Project\\Login and register\\src\\components\\accountBox\\loginForm.jsx":"2","C:\\Users\\Romain Perera\\Documents\\University\\B19L2\\B19L2S2\\Industry Based Project\\Login and register\\src\\components\\accountBox\\index.jsx":"3","C:\\Users\\Romain Perera\\Documents\\University\\B19L2\\B19L2S2\\Industry Based Project\\Login and register\\src\\components\\accountBox\\forgotPasswordForm.jsx":"4","C:\\Users\\Romain Perera\\Documents\\University\\B19L2\\B19L2S2\\Industry Based Project\\Login and register\\src\\components\\accountBox\\signupForm.jsx":"5","C:\\Users\\Romain Perera\\Documents\\University\\B19L2\\B19L2S2\\Industry Based Project\\Login and register\\src\\components\\accountBox\\common.jsx":"6"},{"size":500,"mtime":1637127664610,"results":"7","hashOfConfig":"8"},{"size":1159,"mtime":1638361601703,"results":"9","hashOfConfig":"10"},{"size":5225,"mtime":1638377027571,"results":"11","hashOfConfig":"10"},{"size":925,"mtime":1638365017351,"results":"12","hashOfConfig":"10"},{"size":993,"mtime":1638355911521,"results":"13","hashOfConfig":"10"},{"size":1679,"mtime":1638366831243,"results":"14","hashOfConfig":"10"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ovcot7",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ji48mb",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Romain Perera\\Documents\\University\\B19L2\\B19L2S2\\Industry Based Project\\Login and register\\src\\index.js",[],"C:\\Users\\Romain Perera\\Documents\\University\\B19L2\\B19L2S2\\Industry Based Project\\Login and register\\src\\components\\accountBox\\loginForm.jsx",[],"C:\\Users\\Romain Perera\\Documents\\University\\B19L2\\B19L2S2\\Industry Based Project\\Login and register\\src\\components\\accountBox\\index.jsx",["30"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { LoginForm } from \"./loginForm\";\nimport { motion } from \"framer-motion\";\nimport { AccountContext } from \"./accountContext\";\nimport { SignupForm } from \"./signupForm\";\nimport { ForgotPasswordForm } from \"./forgotPasswordForm\";\nimport { SendForm } from \"./sendForm\";\nimport { NewPasswordForm } from \"./newPasswordForm\";\nimport image1 from \"./PersistentLogo.jpg\";\n\n//fullbody\nconst BoxContainer = styled.div`\n  width: 100%;\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: black;\n  box-shadow: 0 0 2px rgba(15, 15, 15, 0.28);\n  position: relative;\n  overflow: hidden;\n`;\n//welcomeback box\nconst TopContainer = styled.div`\n  width: 200%;\n  height: 260px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: 0 13em;\n  padding-bottom: 5em;\n`;\n//orange part\nconst BackDrop = styled(motion.div)`\n  width: 1000%;\n  height: 1000px;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  border-radius: 70%;\n  transform: rotate(30deg);\n  top: -260px;\n  left: -1px;\n  background: rgb(241, 94, 15);\n  background: linear-gradient(\n    58deg,\n    rgba(241, 94, 15) 20%,\n    rgba(243, 101, 18) 100%\n  );\n`;\n\nconst HeaderContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst HeaderText = styled.h2`\n  font-size: 40px;\n  font-weight: 600;\n  line-height: 1.24;\n  color: #fff;\n  z-index: 10;\n  margin: 0;\n`;\n\nconst SmallText = styled.h5`\n  color: #fff;\n  font-weight: 500;\n  font-size: 20px;\n  z-index: 10;\n  margin: 0;\n  margin-top: 7px;\n`;\n\nconst InnerContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 0 1.8em;\n`;\n\nconst backdropVariants = {\n  expanded: {\n    width: \"233%\",\n    height: \"1050px\",\n    borderRadius: \"20%\",\n    transform: \"rotate(60deg)\",\n  },\n  collapsed: {\n    width: \"160%\",\n    height: \"550px\",\n    borderRadius: \"50%\",\n    transform: \"rotate(60deg)\",\n  },\n};\n\nconst expandingTransition = {\n  type: \"spring\",\n  duration: 2.3,\n  stiffness: 30,\n};\n\t\nexport function AccountBox(props) {\n  const [isExpanded, setExpanded] = useState(false);\n  const [active, setActive] = useState(\"signin\");\n\n  const playExpandingAnimation = () => {\n    setExpanded(true);\n    setTimeout(() => {\n      setExpanded(false);\n    }, expandingTransition.duration * 1000 - 1500);\n  };\n\n  const switchToSignup = () => {\n    playExpandingAnimation();\n    setTimeout(() => {\n      setActive(\"signup\");\n    }, 400);\n  };\n\n  const switchToSignin = () => {\n    playExpandingAnimation();\n    setTimeout(() => {\n      setActive(\"signin\");\n    }, 400);\n  };\n\n  const switchToForgotPassword = () => {\n    playExpandingAnimation();\n    setTimeout(() => {\n      setActive(\"forgotPassword\");\n    }, 400);\n  };\n\n  const switchToSend= () => {\n    playExpandingAnimation();\n    setTimeout(() => {\n      setActive(\"send\");\n    }, 400);\n  };\n\n  const switchToNewPassword= () => {\n    playExpandingAnimation();\n    setTimeout(() => {\n      setActive(\"newPassword\");\n    }, 400);\n  };\n\n  const contextValue = { switchToSignup, switchToSignin,switchToForgotPassword,switchToSend,switchToNewPassword};\n\n  return (\n    <AccountContext.Provider value={contextValue}>\n      <BoxContainer>\n      <div className=\"image\">\n            <img src={image1}/>\n            </div> \n        <TopContainer>\n          <BackDrop\n            initial={false}\n            animate={isExpanded ? \"expanded\" : \"collapsed\"}\n            variants={backdropVariants}\n            transition={expandingTransition}\n          />\n          {active === \"signin\" && (\n            <HeaderContainer>\n              <HeaderText>Welcome</HeaderText>\n              <SmallText>Expense Claim Management System</SmallText>\n            </HeaderContainer>\n          )}\n          {active === \"signup\" && (\n            <HeaderContainer>\n              <HeaderText>Create</HeaderText>\n              <HeaderText>Account</HeaderText>\n              <SmallText>Expense Claim Management System</SmallText>\n            </HeaderContainer>\n          )}\n          {active === \"forgotPassword\" && (\n            <HeaderContainer>\n              <HeaderText>Reset your password</HeaderText>\n              <SmallText>Expense Claim Management System</SmallText>\n            </HeaderContainer>\n          )}\n          {active === \"send\" && (\n            <HeaderContainer>\n              <HeaderText>Reset your password</HeaderText>\n              <SmallText>Expense Claim Management System</SmallText>\n            </HeaderContainer>\n          )}\n          {active === \"newPassword\" && (\n            <HeaderContainer>\n              <HeaderText>Reset your password</HeaderText>\n              <SmallText>Expense Claim Management System</SmallText>\n            </HeaderContainer>\n          )}\n        </TopContainer>\n        <InnerContainer>\n          {active === \"signin\" && <LoginForm />}\n          {active === \"signup\" && <SignupForm />}\n          {active === \"forgotPassword\" && <ForgotPasswordForm />}\n          {active === \"send\" && <SendForm />}\n          {active === \"newPassword\" && <NewPasswordForm/>}\n        </InnerContainer>\n      </BoxContainer>\n    </AccountContext.Provider>\n  );\n}\n",["31","32"],"C:\\Users\\Romain Perera\\Documents\\University\\B19L2\\B19L2S2\\Industry Based Project\\Login and register\\src\\components\\accountBox\\forgotPasswordForm.jsx",["33"],"import React, { useContext } from \"react\";\r\nimport {\r\n  BoldLink,\r\n  BoxContainer,\r\n  FormContainer,\r\n  Input,\r\n  MutedLink,\r\n  SubmitButton,\r\n} from \"./common\";\r\nimport { Marginer } from \"../marginer\";\r\nimport { AccountContext } from \"./accountContext\";\r\n\r\nexport function ForgotPasswordForm(props) {\r\n  const { switchToSend } = useContext(AccountContext);\r\n  return (\r\n    <BoxContainer>\r\n      <FormContainer>\r\n      <MutedLink href=\"#\">\r\n        Please enter your email address to send a verification code to reset your password{\" \"}\r\n      </MutedLink>\r\n      <Marginer direction=\"vertical\" margin=\"1em\" />\r\n        <Input type=\"email\" placeholder=\"Email\" />\r\n      </FormContainer>\r\n      <Marginer direction=\"vertical\" margin={10} />\r\n      <SubmitButton onClick={switchToSend}>\r\n        Send\r\n      </SubmitButton> \r\n      {/* <SubmitButton type=\"submit\">Send</SubmitButton> */}\r\n      </BoxContainer>\r\n  );\r\n}\r\n \r\n\r\n","C:\\Users\\Romain Perera\\Documents\\University\\B19L2\\B19L2S2\\Industry Based Project\\Login and register\\src\\components\\accountBox\\signupForm.jsx",[],"C:\\Users\\Romain Perera\\Documents\\University\\B19L2\\B19L2S2\\Industry Based Project\\Login and register\\src\\components\\accountBox\\common.jsx",["34","35"],{"ruleId":"36","severity":1,"message":"37","line":157,"column":13,"nodeType":"38","endLine":157,"endColumn":32},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":3,"column":3,"nodeType":"45","messageId":"46","endLine":3,"endColumn":11},{"ruleId":"43","severity":1,"message":"47","line":1,"column":10,"nodeType":"45","messageId":"46","endLine":1,"endColumn":16},{"ruleId":"43","severity":1,"message":"48","line":3,"column":8,"nodeType":"45","messageId":"46","endLine":3,"endColumn":14},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'BoldLink' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","'image1' is defined but never used.","no-global-assign","no-unsafe-negation"]